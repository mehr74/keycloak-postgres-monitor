version: "3.8"
services:
  postgres:
    image: postgres:15
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements 
      -c pg_stat_statements.track=all 
      -c max_connections=200
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init/:/docker-entrypoint-initdb.d/
  
  postgres-init:
    image: postgres:15
    command: >
      bash -c "sleep 5 && 
      psql -U keycloak -d postgres -c 'CREATE EXTENSION IF NOT EXISTS pg_stat_statements;'"
    depends_on:
      - postgres
  
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://keycloak:password@postgres:5432/postgres?sslmode=disable
    command: 
      - --collector.stat_statements
      - --collector.process_idle
      - --collector.postmaster
    ports:
      - 9187:9187
    depends_on:
      - postgres
      - postgres-init
  
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    command: start -Djgroups.dns.query=keycloak
    environment:
      KC_CACHE_STACK: kubernetes
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: '5432'
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_PROXY: reencrypt
      KC_HOSTNAME: localhost
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/certs/localhost.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/certs/localhost.key
      KC_SPI_TRUSTSTORE_FILE_FILE: /opt/keycloak/certs/truststore.jks
      KC_SPI_TRUSTSTORE_FILE_PASSWORD: changeit
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    deploy:
      replicas: 2
      endpoint_mode: dnsrr
    volumes:
      - ./certs:/opt/keycloak/certs
    depends_on:
      - postgres

  load-balancer:
    image: docker.io/nginx:alpine
    volumes:
      - ./load-balancer/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/tls
    ports:
      - "443:443"
    depends_on:
      - keycloak
      - postgres

#   prometheus:
#     image: quay.io/prometheus/prometheus
#     volumes:
#       - ./prometheus/:/etc/prometheus/
#     command: "--config.file=/etc/prometheus/prometheus.yaml --storage.tsdb.path=/prometheus"
#     ports:
#       - 9090:9090
#     networks:
#       - hostnet
#   
#   alertmanager:
#     image: quay.io/prometheus/alertmanager
#     volumes:
#       - ./alertmanager/:/etc/alertmanager/
#     ports:
#       - 9093:9093
#     networks:
#       - hostnet
#     
#   grafana:
#     image: grafana/grafana
#     volumes:
#       - ./grafana/provisioning/datasources/:/etc/grafana/provisioning/datasources/
#     environment:
#       - GF_PATH_PROVISIONING=/etc/grafana/provisioning
#     ports:
#       - 3000:3000 
#     networks:
#       - hostnet
# 
#   mailhog:
#     image: mailhog/mailhog
#     ports:
#       - 8025:8025
#       - 1025:1025
#     networks:
#       - hostnet
#   
#   stunnel:
#     image: dweomer/stunnel
#     environment:
#       - STUNNEL_SERVICE=smtps
#       - STUNNEL_ACCEPT=465
#       - STUNNEL_CONNECT=mailhog:1025
#     ports:
#       - 465:465
#     networks:
#       - hostnet
# 